stages:
  - test
  - rate

golang-check:
  stage: test
  image: golang:latest
  script:
    - go vet $(go list ./...)
    - go test -v -race -coverprofile=coverage.out $(go list ./... | grep -v test | grep -v server)
  artifacts:
    paths:
    - coverage.out
    expire_in: 1 day

sonarqube-check:
  stage: rate
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - main
