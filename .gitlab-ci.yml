stages:
  - test
  - build
  - rate

golang-check:
  stage: test
  image: golang:alpine
  variables:
    CGO_CFLAGS_ALLOW: ".*"
    CGO_LDFLAGS_ALLOW: ".*"
  script:
    - apk add --no-cache librsvg-dev cairo-dev pkgconfig gcc musl-dev
    - go vet $(go list ./...)
    - go test -v -coverprofile=coverage.out $(go list ./... | grep -v -e test -e server)
  artifacts:
    paths:
      - coverage.out
    expire_in: 1 day

docker-build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - tags
    - main

sonarqube-check:
  stage: rate
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - main
